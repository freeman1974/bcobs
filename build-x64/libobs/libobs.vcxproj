<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="16.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{6FFDC9CC-FECB-3B79-BBC1-2D100066D7D5}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.18362.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>libobs</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\proj\github\obs\obs-studio\build-x64\libobs\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">libobs.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">obs</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\proj\github\obs\obs-studio\build-x64\libobs\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">libobs.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">obs</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\proj\github\obs\obs-studio\build-x64\libobs\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">libobs.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">obs</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\proj\github\obs\obs-studio\build-x64\libobs\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">libobs.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">obs</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\proj\github\obs\obs-studio\libobs;D:\proj\github\obs\obs-studio\build-x64\config;D:\proj\github\obs\obs-studio\deps\w32-pthreads;D:\proj\github\obs\obs-studio\deps\jansson\src;D:\proj\github\obs\obs-studio\build-x64\deps\jansson\include;D:\proj\github\obs\obs-tools\obs-deps2017\win64\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /EHc-</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <CompileAs>CompileAsC</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>
      </ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;DEBUG=1;_DEBUG=1;HAVE_OBSCONFIG_H;UNICODE;_UNICODE;_CRT_SECURE_NO_WARNINGS;_CRT_NONSTDC_NO_WARNINGS;LIBOBS_EXPORTS;CMAKE_INTDIR="Debug";libobs_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_DEBUG;_WINDOWS;DEBUG=1;_DEBUG=1;HAVE_OBSCONFIG_H;UNICODE;_UNICODE;_CRT_SECURE_NO_WARNINGS;_CRT_NONSTDC_NO_WARNINGS;LIBOBS_EXPORTS;CMAKE_INTDIR=\"Debug\";libobs_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\proj\github\obs\obs-studio\libobs;D:\proj\github\obs\obs-studio\build-x64\config;D:\proj\github\obs\obs-studio\deps\w32-pthreads;D:\proj\github\obs\obs-studio\deps\jansson\src;D:\proj\github\obs\obs-studio\build-x64\deps\jansson\include;D:\proj\github\obs\obs-tools\obs-deps2017\win64\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\proj\github\obs\obs-studio\libobs;D:\proj\github\obs\obs-studio\build-x64\config;D:\proj\github\obs\obs-studio\deps\w32-pthreads;D:\proj\github\obs\obs-studio\deps\jansson\src;D:\proj\github\obs\obs-studio\build-x64\deps\jansson\include;D:\proj\github\obs\obs-tools\obs-deps2017\win64\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message>											</Message>
      <Command>setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -E copy D:/proj/github/obs/obs-studio/build-x64/libobs/Debug/obs.dll D:/proj/github/obs/obs-studio/build-x64/rundir/Debug/bin/64bit/obs.dll
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=Debug -DFNAME=obs.dll -DINPUT=D:/proj/github/obs/obs-studio/build-x64/libobs/Debug -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/libobs/pdbs -P D:/proj/github/obs/obs-studio/cmake/copy_on_debug_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=Debug -DFNAME=obs.dll -DINPUT=D:/proj/github/obs/obs-studio/build-x64/libobs/Debug -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/Debug/bin/64bit -P D:/proj/github/obs/obs-studio/cmake/copy_on_debug_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -E copy_directory D:/proj/github/obs/obs-studio/libobs/data D:/proj/github/obs/obs-studio/build-x64/rundir/Debug/data/libobs
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=Debug -DTARGET_CONFIGS=ALL -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/misc/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/Debug/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=Debug -DTARGET_CONFIGS=ALL -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/data/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/Debug/data/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=Debug -DTARGET_CONFIGS=ALL -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/libs64/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/Debug/bin/64bit/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=Debug -DTARGET_CONFIGS=ALL -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/exec64/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/Debug/bin/64bit/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=Debug -DTARGET_CONFIGS=Release";"MinSizeRel";"RelWithDebInfo -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/exec64r/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/Debug/bin/64bit/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=Debug -DTARGET_CONFIGS=Debug -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/exec64d/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/Debug/bin/64bit/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=Debug -DTARGET_CONFIGS=Release";"MinSizeRel";"RelWithDebInfo -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/libs64r/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/Debug/bin/64bit/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=Debug -DTARGET_CONFIGS=Debug -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/libs64d/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/Debug/bin/64bit/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>winmm.lib;psapi.lib;..\deps\w32-pthreads\Debug\w32-pthreads.lib;D:\proj\github\obs\obs-tools\obs-deps2017\win64\bin\avcodec.lib;..\deps\jansson\lib\Debug\jansson_d.lib;D:\proj\github\obs\obs-tools\obs-deps2017\win64\bin\avformat.lib;D:\proj\github\obs\obs-tools\obs-deps2017\win64\bin\avutil.lib;D:\proj\github\obs\obs-tools\obs-deps2017\win64\bin\swscale.lib;D:\proj\github\obs\obs-tools\obs-deps2017\win64\bin\swresample.lib;D:\proj\github\obs\obs-tools\obs-deps2017\win64\bin\zlib.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>
      <ImportLibrary>D:/proj/github/obs/obs-studio/build-x64/libobs/Debug/obs.lib</ImportLibrary>
      <OptimizeReferences>true</OptimizeReferences>
      <ProgramDataBaseFile>D:/proj/github/obs/obs-studio/build-x64/libobs/Debug/obs.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\proj\github\obs\obs-studio\libobs;D:\proj\github\obs\obs-studio\build-x64\config;D:\proj\github\obs\obs-studio\deps\w32-pthreads;D:\proj\github\obs\obs-studio\deps\jansson\src;D:\proj\github\obs\obs-studio\build-x64\deps\jansson\include;D:\proj\github\obs\obs-tools\obs-deps2017\win64\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /EHc-</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <CompileAs>CompileAsC</CompileAs>
      <ExceptionHandling>
      </ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;HAVE_OBSCONFIG_H;UNICODE;_UNICODE;_CRT_SECURE_NO_WARNINGS;_CRT_NONSTDC_NO_WARNINGS;LIBOBS_EXPORTS;CMAKE_INTDIR="Release";libobs_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;HAVE_OBSCONFIG_H;UNICODE;_UNICODE;_CRT_SECURE_NO_WARNINGS;_CRT_NONSTDC_NO_WARNINGS;LIBOBS_EXPORTS;CMAKE_INTDIR=\"Release\";libobs_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\proj\github\obs\obs-studio\libobs;D:\proj\github\obs\obs-studio\build-x64\config;D:\proj\github\obs\obs-studio\deps\w32-pthreads;D:\proj\github\obs\obs-studio\deps\jansson\src;D:\proj\github\obs\obs-studio\build-x64\deps\jansson\include;D:\proj\github\obs\obs-tools\obs-deps2017\win64\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\proj\github\obs\obs-studio\libobs;D:\proj\github\obs\obs-studio\build-x64\config;D:\proj\github\obs\obs-studio\deps\w32-pthreads;D:\proj\github\obs\obs-studio\deps\jansson\src;D:\proj\github\obs\obs-studio\build-x64\deps\jansson\include;D:\proj\github\obs\obs-tools\obs-deps2017\win64\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message>											</Message>
      <Command>setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -E copy D:/proj/github/obs/obs-studio/build-x64/libobs/Release/obs.dll D:/proj/github/obs/obs-studio/build-x64/rundir/Release/bin/64bit/obs.dll
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=Release -DFNAME=obs.dll -DINPUT=D:/proj/github/obs/obs-studio/build-x64/libobs/Release -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/libobs/pdbs -P D:/proj/github/obs/obs-studio/cmake/copy_on_debug_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=Release -DFNAME=obs.dll -DINPUT=D:/proj/github/obs/obs-studio/build-x64/libobs/Release -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/Release/bin/64bit -P D:/proj/github/obs/obs-studio/cmake/copy_on_debug_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -E copy_directory D:/proj/github/obs/obs-studio/libobs/data D:/proj/github/obs/obs-studio/build-x64/rundir/Release/data/libobs
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=Release -DTARGET_CONFIGS=ALL -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/misc/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/Release/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=Release -DTARGET_CONFIGS=ALL -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/data/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/Release/data/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=Release -DTARGET_CONFIGS=ALL -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/libs64/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/Release/bin/64bit/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=Release -DTARGET_CONFIGS=ALL -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/exec64/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/Release/bin/64bit/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=Release -DTARGET_CONFIGS=Release";"MinSizeRel";"RelWithDebInfo -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/exec64r/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/Release/bin/64bit/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=Release -DTARGET_CONFIGS=Debug -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/exec64d/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/Release/bin/64bit/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=Release -DTARGET_CONFIGS=Release";"MinSizeRel";"RelWithDebInfo -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/libs64r/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/Release/bin/64bit/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=Release -DTARGET_CONFIGS=Debug -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/libs64d/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/Release/bin/64bit/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>winmm.lib;psapi.lib;..\deps\w32-pthreads\Release\w32-pthreads.lib;D:\proj\github\obs\obs-tools\obs-deps2017\win64\bin\avcodec.lib;..\deps\jansson\lib\Release\jansson.lib;D:\proj\github\obs\obs-tools\obs-deps2017\win64\bin\avformat.lib;D:\proj\github\obs\obs-tools\obs-deps2017\win64\bin\avutil.lib;D:\proj\github\obs\obs-tools\obs-deps2017\win64\bin\swscale.lib;D:\proj\github\obs\obs-tools\obs-deps2017\win64\bin\swresample.lib;D:\proj\github\obs\obs-tools\obs-deps2017\win64\bin\zlib.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>
      <ImportLibrary>D:/proj/github/obs/obs-studio/build-x64/libobs/Release/obs.lib</ImportLibrary>
      <OptimizeReferences>true</OptimizeReferences>
      <ProgramDataBaseFile>D:/proj/github/obs/obs-studio/build-x64/libobs/Release/obs.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\proj\github\obs\obs-studio\libobs;D:\proj\github\obs\obs-studio\build-x64\config;D:\proj\github\obs\obs-studio\deps\w32-pthreads;D:\proj\github\obs\obs-studio\deps\jansson\src;D:\proj\github\obs\obs-studio\build-x64\deps\jansson\include;D:\proj\github\obs\obs-tools\obs-deps2017\win64\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /EHc-</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <CompileAs>CompileAsC</CompileAs>
      <ExceptionHandling>
      </ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;HAVE_OBSCONFIG_H;UNICODE;_UNICODE;_CRT_SECURE_NO_WARNINGS;_CRT_NONSTDC_NO_WARNINGS;LIBOBS_EXPORTS;CMAKE_INTDIR="MinSizeRel";libobs_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;HAVE_OBSCONFIG_H;UNICODE;_UNICODE;_CRT_SECURE_NO_WARNINGS;_CRT_NONSTDC_NO_WARNINGS;LIBOBS_EXPORTS;CMAKE_INTDIR=\"MinSizeRel\";libobs_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\proj\github\obs\obs-studio\libobs;D:\proj\github\obs\obs-studio\build-x64\config;D:\proj\github\obs\obs-studio\deps\w32-pthreads;D:\proj\github\obs\obs-studio\deps\jansson\src;D:\proj\github\obs\obs-studio\build-x64\deps\jansson\include;D:\proj\github\obs\obs-tools\obs-deps2017\win64\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\proj\github\obs\obs-studio\libobs;D:\proj\github\obs\obs-studio\build-x64\config;D:\proj\github\obs\obs-studio\deps\w32-pthreads;D:\proj\github\obs\obs-studio\deps\jansson\src;D:\proj\github\obs\obs-studio\build-x64\deps\jansson\include;D:\proj\github\obs\obs-tools\obs-deps2017\win64\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message>											</Message>
      <Command>setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -E copy D:/proj/github/obs/obs-studio/build-x64/libobs/MinSizeRel/obs.dll D:/proj/github/obs/obs-studio/build-x64/rundir/MinSizeRel/bin/64bit/obs.dll
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=MinSizeRel -DFNAME=obs.dll -DINPUT=D:/proj/github/obs/obs-studio/build-x64/libobs/MinSizeRel -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/libobs/pdbs -P D:/proj/github/obs/obs-studio/cmake/copy_on_debug_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=MinSizeRel -DFNAME=obs.dll -DINPUT=D:/proj/github/obs/obs-studio/build-x64/libobs/MinSizeRel -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/MinSizeRel/bin/64bit -P D:/proj/github/obs/obs-studio/cmake/copy_on_debug_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -E copy_directory D:/proj/github/obs/obs-studio/libobs/data D:/proj/github/obs/obs-studio/build-x64/rundir/MinSizeRel/data/libobs
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=MinSizeRel -DTARGET_CONFIGS=ALL -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/misc/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/MinSizeRel/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=MinSizeRel -DTARGET_CONFIGS=ALL -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/data/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/MinSizeRel/data/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=MinSizeRel -DTARGET_CONFIGS=ALL -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/libs64/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/MinSizeRel/bin/64bit/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=MinSizeRel -DTARGET_CONFIGS=ALL -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/exec64/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/MinSizeRel/bin/64bit/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=MinSizeRel -DTARGET_CONFIGS=Release";"MinSizeRel";"RelWithDebInfo -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/exec64r/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/MinSizeRel/bin/64bit/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=MinSizeRel -DTARGET_CONFIGS=Debug -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/exec64d/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/MinSizeRel/bin/64bit/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=MinSizeRel -DTARGET_CONFIGS=Release";"MinSizeRel";"RelWithDebInfo -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/libs64r/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/MinSizeRel/bin/64bit/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=MinSizeRel -DTARGET_CONFIGS=Debug -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/libs64d/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/MinSizeRel/bin/64bit/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>winmm.lib;psapi.lib;..\deps\w32-pthreads\MinSizeRel\w32-pthreads.lib;D:\proj\github\obs\obs-tools\obs-deps2017\win64\bin\avcodec.lib;..\deps\jansson\lib\MinSizeRel\jansson.lib;D:\proj\github\obs\obs-tools\obs-deps2017\win64\bin\avformat.lib;D:\proj\github\obs\obs-tools\obs-deps2017\win64\bin\avutil.lib;D:\proj\github\obs\obs-tools\obs-deps2017\win64\bin\swscale.lib;D:\proj\github\obs\obs-tools\obs-deps2017\win64\bin\swresample.lib;D:\proj\github\obs\obs-tools\obs-deps2017\win64\bin\zlib.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>
      <ImportLibrary>D:/proj/github/obs/obs-studio/build-x64/libobs/MinSizeRel/obs.lib</ImportLibrary>
      <OptimizeReferences>true</OptimizeReferences>
      <ProgramDataBaseFile>D:/proj/github/obs/obs-studio/build-x64/libobs/MinSizeRel/obs.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\proj\github\obs\obs-studio\libobs;D:\proj\github\obs\obs-studio\build-x64\config;D:\proj\github\obs\obs-studio\deps\w32-pthreads;D:\proj\github\obs\obs-studio\deps\jansson\src;D:\proj\github\obs\obs-studio\build-x64\deps\jansson\include;D:\proj\github\obs\obs-tools\obs-deps2017\win64\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /EHc-</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <CompileAs>CompileAsC</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>
      </ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;HAVE_OBSCONFIG_H;UNICODE;_UNICODE;_CRT_SECURE_NO_WARNINGS;_CRT_NONSTDC_NO_WARNINGS;LIBOBS_EXPORTS;CMAKE_INTDIR="RelWithDebInfo";libobs_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;HAVE_OBSCONFIG_H;UNICODE;_UNICODE;_CRT_SECURE_NO_WARNINGS;_CRT_NONSTDC_NO_WARNINGS;LIBOBS_EXPORTS;CMAKE_INTDIR=\"RelWithDebInfo\";libobs_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\proj\github\obs\obs-studio\libobs;D:\proj\github\obs\obs-studio\build-x64\config;D:\proj\github\obs\obs-studio\deps\w32-pthreads;D:\proj\github\obs\obs-studio\deps\jansson\src;D:\proj\github\obs\obs-studio\build-x64\deps\jansson\include;D:\proj\github\obs\obs-tools\obs-deps2017\win64\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\proj\github\obs\obs-studio\libobs;D:\proj\github\obs\obs-studio\build-x64\config;D:\proj\github\obs\obs-studio\deps\w32-pthreads;D:\proj\github\obs\obs-studio\deps\jansson\src;D:\proj\github\obs\obs-studio\build-x64\deps\jansson\include;D:\proj\github\obs\obs-tools\obs-deps2017\win64\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message>											</Message>
      <Command>setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -E copy D:/proj/github/obs/obs-studio/build-x64/libobs/RelWithDebInfo/obs.dll D:/proj/github/obs/obs-studio/build-x64/rundir/RelWithDebInfo/bin/64bit/obs.dll
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=RelWithDebInfo -DFNAME=obs.dll -DINPUT=D:/proj/github/obs/obs-studio/build-x64/libobs/RelWithDebInfo -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/libobs/pdbs -P D:/proj/github/obs/obs-studio/cmake/copy_on_debug_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=RelWithDebInfo -DFNAME=obs.dll -DINPUT=D:/proj/github/obs/obs-studio/build-x64/libobs/RelWithDebInfo -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/RelWithDebInfo/bin/64bit -P D:/proj/github/obs/obs-studio/cmake/copy_on_debug_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -E copy_directory D:/proj/github/obs/obs-studio/libobs/data D:/proj/github/obs/obs-studio/build-x64/rundir/RelWithDebInfo/data/libobs
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=RelWithDebInfo -DTARGET_CONFIGS=ALL -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/misc/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/RelWithDebInfo/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=RelWithDebInfo -DTARGET_CONFIGS=ALL -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/data/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/RelWithDebInfo/data/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=RelWithDebInfo -DTARGET_CONFIGS=ALL -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/libs64/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/RelWithDebInfo/bin/64bit/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=RelWithDebInfo -DTARGET_CONFIGS=ALL -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/exec64/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/RelWithDebInfo/bin/64bit/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=RelWithDebInfo -DTARGET_CONFIGS=Release";"MinSizeRel";"RelWithDebInfo -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/exec64r/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/RelWithDebInfo/bin/64bit/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=RelWithDebInfo -DTARGET_CONFIGS=Debug -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/exec64d/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/RelWithDebInfo/bin/64bit/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=RelWithDebInfo -DTARGET_CONFIGS=Release";"MinSizeRel";"RelWithDebInfo -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/libs64r/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/RelWithDebInfo/bin/64bit/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -DCONFIG=RelWithDebInfo -DTARGET_CONFIGS=Debug -DINPUT=D:/proj/github/obs/obs-studio/additional_install_files/libs64d/ -DOUTPUT=D:/proj/github/obs/obs-studio/build-x64/rundir/RelWithDebInfo/bin/64bit/ -P D:/proj/github/obs/obs-studio/cmake/copy_helper.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>winmm.lib;psapi.lib;..\deps\w32-pthreads\RelWithDebInfo\w32-pthreads.lib;D:\proj\github\obs\obs-tools\obs-deps2017\win64\bin\avcodec.lib;..\deps\jansson\lib\RelWithDebInfo\jansson.lib;D:\proj\github\obs\obs-tools\obs-deps2017\win64\bin\avformat.lib;D:\proj\github\obs\obs-tools\obs-deps2017\win64\bin\avutil.lib;D:\proj\github\obs\obs-tools\obs-deps2017\win64\bin\swscale.lib;D:\proj\github\obs\obs-tools\obs-deps2017\win64\bin\swresample.lib;D:\proj\github\obs\obs-tools\obs-deps2017\win64\bin\zlib.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>
      <ImportLibrary>D:/proj/github/obs/obs-studio/build-x64/libobs/RelWithDebInfo/obs.lib</ImportLibrary>
      <OptimizeReferences>true</OptimizeReferences>
      <ProgramDataBaseFile>D:/proj/github/obs/obs-studio/build-x64/libobs/RelWithDebInfo/obs.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\proj\github\obs\obs-studio\libobs\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule D:/proj/github/obs/obs-studio/libobs/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -SD:/proj/github/obs/obs-studio -BD:/proj/github/obs/obs-studio/build-x64 --check-stamp-file D:/proj/github/obs/obs-studio/build-x64/libobs/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\proj\github\obs\obs-studio\build-x64\CMakeFiles\CheckIncludeFiles\CMAKE_HAVE_PTHREAD_H.c;D:\proj\github\obs\obs-studio\cmake\Modules\FindFFmpeg.cmake;D:\proj\github\obs\obs-studio\cmake\Modules\FindThreads.cmake;D:\proj\github\obs\obs-studio\cmake\Modules\FindZLIB.cmake;D:\proj\github\obs\obs-studio\libobs\LibObsConfig.cmake.in;D:\proj\github\obs\obs-studio\libobs\LibObsConfigVersion.cmake.in;D:\proj\github\obs\obs-studio\libobs\obsconfig.h.in;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\CMakeConfigurableFile.in;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\CheckIncludeFiles.cmake;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\CheckLibraryExists.cmake;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\CheckSymbolExists.cmake;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\FindImageMagick.cmake;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\FindPackageHandleStandardArgs.cmake;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\FindPackageMessage.cmake;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\FindPkgConfig.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\proj\github\obs\obs-studio\build-x64\libobs\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/proj/github/obs/obs-studio/libobs/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -SD:/proj/github/obs/obs-studio -BD:/proj/github/obs/obs-studio/build-x64 --check-stamp-file D:/proj/github/obs/obs-studio/build-x64/libobs/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\proj\github\obs\obs-studio\build-x64\CMakeFiles\CheckIncludeFiles\CMAKE_HAVE_PTHREAD_H.c;D:\proj\github\obs\obs-studio\cmake\Modules\FindFFmpeg.cmake;D:\proj\github\obs\obs-studio\cmake\Modules\FindThreads.cmake;D:\proj\github\obs\obs-studio\cmake\Modules\FindZLIB.cmake;D:\proj\github\obs\obs-studio\libobs\LibObsConfig.cmake.in;D:\proj\github\obs\obs-studio\libobs\LibObsConfigVersion.cmake.in;D:\proj\github\obs\obs-studio\libobs\obsconfig.h.in;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\CMakeConfigurableFile.in;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\CheckIncludeFiles.cmake;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\CheckLibraryExists.cmake;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\CheckSymbolExists.cmake;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\FindImageMagick.cmake;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\FindPackageHandleStandardArgs.cmake;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\FindPackageMessage.cmake;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\FindPkgConfig.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\proj\github\obs\obs-studio\build-x64\libobs\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule D:/proj/github/obs/obs-studio/libobs/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -SD:/proj/github/obs/obs-studio -BD:/proj/github/obs/obs-studio/build-x64 --check-stamp-file D:/proj/github/obs/obs-studio/build-x64/libobs/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\proj\github\obs\obs-studio\build-x64\CMakeFiles\CheckIncludeFiles\CMAKE_HAVE_PTHREAD_H.c;D:\proj\github\obs\obs-studio\cmake\Modules\FindFFmpeg.cmake;D:\proj\github\obs\obs-studio\cmake\Modules\FindThreads.cmake;D:\proj\github\obs\obs-studio\cmake\Modules\FindZLIB.cmake;D:\proj\github\obs\obs-studio\libobs\LibObsConfig.cmake.in;D:\proj\github\obs\obs-studio\libobs\LibObsConfigVersion.cmake.in;D:\proj\github\obs\obs-studio\libobs\obsconfig.h.in;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\CMakeConfigurableFile.in;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\CheckIncludeFiles.cmake;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\CheckLibraryExists.cmake;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\CheckSymbolExists.cmake;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\FindImageMagick.cmake;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\FindPackageHandleStandardArgs.cmake;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\FindPackageMessage.cmake;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\FindPkgConfig.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\proj\github\obs\obs-studio\build-x64\libobs\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule D:/proj/github/obs/obs-studio/libobs/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
D:\proj\github\obs\obs-tools\cmake-3.17.0\bin\cmake.exe -SD:/proj/github/obs/obs-studio -BD:/proj/github/obs/obs-studio/build-x64 --check-stamp-file D:/proj/github/obs/obs-studio/build-x64/libobs/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\proj\github\obs\obs-studio\build-x64\CMakeFiles\CheckIncludeFiles\CMAKE_HAVE_PTHREAD_H.c;D:\proj\github\obs\obs-studio\cmake\Modules\FindFFmpeg.cmake;D:\proj\github\obs\obs-studio\cmake\Modules\FindThreads.cmake;D:\proj\github\obs\obs-studio\cmake\Modules\FindZLIB.cmake;D:\proj\github\obs\obs-studio\libobs\LibObsConfig.cmake.in;D:\proj\github\obs\obs-studio\libobs\LibObsConfigVersion.cmake.in;D:\proj\github\obs\obs-studio\libobs\obsconfig.h.in;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\CMakeConfigurableFile.in;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\CheckIncludeFiles.cmake;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\CheckLibraryExists.cmake;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\CheckSymbolExists.cmake;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\FindImageMagick.cmake;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\FindPackageHandleStandardArgs.cmake;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\FindPackageMessage.cmake;D:\proj\github\obs\obs-tools\cmake-3.17.0\share\cmake-3.17\Modules\FindPkgConfig.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\proj\github\obs\obs-studio\build-x64\libobs\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\callback\calldata.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\callback\decl.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\callback\signal.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\callback\proc.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\graphics\graphics-ffmpeg.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\graphics\quat.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\graphics\effect-parser.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\graphics\axisang.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\graphics\vec4.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\graphics\vec2.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\graphics\libnsgif\libnsgif.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\graphics\texture-render.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\graphics\image-file.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\graphics\bounds.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\graphics\matrix3.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\graphics\matrix4.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\graphics\vec3.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\graphics\graphics.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\graphics\shader-parser.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\graphics\plane.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\graphics\effect.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\graphics\math-extra.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\graphics\graphics-imports.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\media-io\video-io.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\media-io\video-fourcc.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\media-io\video-matrices.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\media-io\audio-io.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\media-io\video-frame.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\media-io\format-conversion.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\media-io\audio-resampler-ffmpeg.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\media-io\video-scaler-ffmpeg.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\media-io\media-remux.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\util\array-serializer.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\util\file-serializer.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\util\base.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\util\platform.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\util\cf-lexer.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\util\bmem.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\util\config-file.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\util\lexer.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\util\dstr.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\util\utf8.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\util\crc32.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\util\text-lookup.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\util\cf-parser.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\util\profiler.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\obs-win-crash-handler.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\obs-windows.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\util\threading-windows.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\util\pipe-windows.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\util\platform-windows.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\obs-audio-controls.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\obs-avc.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\obs-encoder.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\obs-service.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\obs-source.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\obs-source-deinterlace.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\obs-source-transition.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\obs-output.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\obs-output-delay.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\obs.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\obs-properties.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\obs-data.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\obs-hotkey.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\obs-hotkey-name-map.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\obs-module.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\obs-display.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\obs-view.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\obs-scene.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\obs-audio.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\obs-video-gpu-encode.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\obs-video.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\audio-monitoring\win32\wasapi-output.c" />
    <ClCompile Include="D:\proj\github\obs\obs-studio\libobs\audio-monitoring\win32\wasapi-enum-devices.c" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\build-x64\config\obsconfig.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\obs-config.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\callback\calldata.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\callback\decl.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\callback\proc.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\callback\signal.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\graphics\half.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\graphics\plane.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\graphics\quat.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\graphics\input.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\graphics\axisang.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\graphics\shader-parser.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\graphics\effect.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\graphics\math-defs.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\graphics\matrix4.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\graphics\graphics.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\graphics\graphics-internal.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\graphics\libnsgif\libnsgif.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\graphics\device-exports.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\graphics\image-file.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\graphics\vec2.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\graphics\vec4.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\graphics\matrix3.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\graphics\vec3.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\graphics\math-extra.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\graphics\bounds.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\graphics\effect-parser.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\media-io\media-io-defs.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\media-io\video-io.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\media-io\audio-io.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\media-io\audio-math.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\media-io\video-frame.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\media-io\format-conversion.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\media-io\audio-resampler.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\media-io\video-scaler.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\media-io\media-remux.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\media-io\frame-rate.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\curl\curl-helper.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\sse-intrin.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\array-serializer.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\file-serializer.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\utf8.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\crc32.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\base.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\text-lookup.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\bmem.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\c99defs.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\util_uint128.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\cf-parser.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\threading.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\pipe.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\cf-lexer.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\darray.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\circlebuf.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\dstr.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\serializer.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\config-file.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\lexer.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\platform.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\profiler.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\profiler.hpp" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\threading-windows.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\windows\win-registry.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\windows\win-version.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\windows\ComPtr.hpp" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\windows\CoTaskMemPtr.hpp" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\windows\HRError.hpp" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\util\windows\WinHandle.hpp" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\obs-audio-controls.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\obs-defs.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\obs-avc.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\obs-encoder.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\obs-service.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\obs-internal.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\obs.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\obs-ui.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\obs-properties.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\obs-data.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\obs-interaction.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\obs-hotkey.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\obs-hotkeys.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\obs-module.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\obs-scene.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\obs-source.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\obs-output.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\obs-ffmpeg-compat.h" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\obs.hpp" />
    <ClInclude Include="D:\proj\github\obs\obs-studio\libobs\audio-monitoring\win32\wasapi-output.h" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:\proj\github\obs\obs-studio\build-x64\ZERO_CHECK.vcxproj">
      <Project>{C1803EF6-F629-3922-93F2-0DA9AA51712C}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="D:\proj\github\obs\obs-studio\build-x64\deps\jansson\jansson.vcxproj">
      <Project>{88BA7837-BCD3-3450-A4D6-04F9CCB403C7}</Project>
      <Name>jansson</Name>
    </ProjectReference>
    <ProjectReference Include="D:\proj\github\obs\obs-studio\build-x64\deps\w32-pthreads\w32-pthreads.vcxproj">
      <Project>{5D3A4EA2-CA56-3999-9123-BB80BB4723B4}</Project>
      <Name>w32-pthreads</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>